/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */

public class Solution {
    public BigInteger ListNodeToInt(ListNode l1,ListNode l2){
        BigInteger num = 0;
        BigInteger count = 1;
        while(l1.next!=null){     
            num += l1.val*count;
            count *=10;
            l1 = l1.next;
        }
        num = num+l1.val*count;
        count = 1;
        while(l2.next!=null){
            num += l2.val*count;
            count *=10;
            l2 = l2.next;
        }
        num = num+l2.val*count;
        return num;
    }
    public ListNode IntToListNode(BigInteger num){
        BigInteger integer = num%10;
        ListNode ans = new ListNode((int)integer);
        ListNode tmp = ans;
        BigInteger count = 10;
        num /= 10 ; 
        while(true){
            if(num<=0)
                break;
            integer = num%10;
            tmp.next = new ListNode((int)integer);
            num/=10;
            tmp = tmp.next;
        }
        return ans;
    }
    public ListNode AddTwoNumbers(ListNode l1, ListNode l2){
        return IntToListNode(ListNodeToInt(l1,l2));
    }
}