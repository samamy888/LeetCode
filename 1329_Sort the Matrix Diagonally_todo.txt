public class Solution {
    public int[][] DiagonalSort(int[][] mat) {
        if(mat.Length==1)
            return mat;
        int [][] After = new int[mat.Length][];
        int [][] mat2 = mat;
        int[] arr;
        for(int i=mat.Length-1;i>=0;i--){
            arr = new int[mat.Length-i];
            for(int j=0;j<mat.Length-i;j++){
                arr[j] = mat[i+j][j];
            }
            Array.Sort(arr);
            for(int j=0;j<mat.Length-i;j++){
                mat2[i+j][j] = arr[j];
            }
        }         
        
        int cnt = 0;
        int cnt2 =1;
        arr = new int[Math.Min(mat[0].Length,mat.Length)]; 
        for(int j=cnt2;j<mat[0].Length;j++){
            Console.WriteLine($"arr[{cnt}] = {mat[cnt][j]} , mat[{cnt}][{j}] = {mat[cnt][j]} , cnt = {cnt}  , cnt2 = {cnt2} , j = {j}");
            arr[cnt] = mat[cnt][j];
            cnt++;
            if(cnt==mat.Length || j==mat[0].Length-1){
                cnt = 0;
                Array.Sort(arr);
                for(j=cnt2;j<mat[0].Length;j++){
                    Console.WriteLine($"After arr[{cnt}] = {arr[cnt]}, cnt = {cnt}  , cnt2 = {cnt2} , j = {j}");
                    mat2[cnt][j] = arr[cnt];
                    cnt++;
                    if(cnt==arr.Length) break;
                }
                cnt = 0;
                j = cnt2;
                cnt2++;
                arr = new int[Math.Min(mat[0].Length-cnt2,mat.Length)]; 
                if(cnt2==mat[0].Length-1)
                    break;
            } 
        }
        return mat;
    }
}